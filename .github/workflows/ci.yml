name: ci
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  PROJECT_NAME: flake
on: 
  schedule:
    - cron: '0 0 * * *'
  push:
  workflow_dispatch:

jobs:
  record:
    runs-on: ubuntu-20.04
    outputs:
      recordDuration: ${{steps.end.outputs.recordDuration}}
      uploadDuration: ${{steps.end.outputs.uploadDuration}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      # https://github.com/cypress-io/github-action
      - name: Set test start
        if: always()
        id: recordStart
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT
      - name: Cypress run
        if: always()
        uses: cypress-io/github-action@v4
        with:
          browser: 'Replay Chromium'
          # check the spec types
          build: npm run lint
          # start the application before running Cypress
          start: npm start
        env:
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY_METADATA_FILE: /tmp/replay-metadata
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: "help i'm trapped in a test run title making factory"
          CYPRESS_NO_COMMAND_LOG: 1
      - name: Set upload start
        if: always()
        id: uploadStart
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT
      - name: Upload replays ▶️
        if: ${{ always() }}
        uses: replayio/action-upload@v0.4.3
        with:
          api-key: rwk_3gdLWqm8nrWA7jbPG8aiADVQ7moc0PYGdAEdnKAfzbM
          public: true
      - name: Set duration in output
        id: end
        if: always()
        run: | 
          echo "recordDuration=$((${{ steps.uploadStart.outputs.time }} - ${{ steps.recordStart.outputs.time }}))" >> $GITHUB_OUTPUT
          echo "uploadDuration=$((`date +%s` - ${{ steps.uploadStart.outputs.time }}))" >> $GITHUB_OUTPUT
  no-record:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      # https://github.com/cypress-io/github-action
      - name: Cypress run
        if: always()
        uses: cypress-io/github-action@v4
        with:
          browser: 'Replay Chromium'
          # check the spec types
          build: npm run lint
          # start the application before running Cypress
          start: npm start
        env:
          RECORD_REPLAY_TEST_METRICS: 1
          RECORD_REPLAY_WEBHOOK_URL: ${{ secrets.RECORD_REPLAY_WEBHOOK_URL }}
          RECORD_ALL_CONTENT: 1
          RECORD_REPLAY_METADATA_FILE: /tmp/replay-metadata
          RECORD_REPLAY_DRIVER: /tmp/not-here
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: "help i'm trapped in a test run title making factory"
  original:
    runs-on: ubuntu-20.04
    outputs:
     duration: ${{steps.end.outputs.duration}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      # https://github.com/cypress-io/github-action
      - name: Set test start
        if: always()
        id: start
        run: echo "time=`date +%s`" >> $GITHUB_OUTPUT
      - name: Cypress run
        if: always()
        uses: cypress-io/github-action@v4
        with:
          # check the spec types
          build: npm run lint
          # start the application before running Cypress
          start: npm start
      - name: Set duration in output
        if: always()
        id: end
        run: echo "duration=$((`date +%s` - ${{ steps.start.outputs.time }}))" >> $GITHUB_OUTPUT
  upload-benchmarks:
    name: Upload benchmarks
    runs-on: ubuntu-latest
    needs: [record, original]
    if: always()
    steps:
      - run: |
          echo "Original Duration: ${{ needs.original.outputs.duration }}"
          echo "Record Duration: ${{ needs.record.outputs.recordDuration }}"
          echo "Upload Duration: ${{ needs.record.outputs.uploadDuration }}"
      - name: Fetch API Data 📦
        uses: JamesIves/fetch-api-data-action@v2
        with:
          endpoint: "https://telemetry.replay.io"
          configuration: '{ "method": "POST", "body": {"event": "Webhook", "source": "metrics", "name": "action-finished", "project": "flake", "originalDuration": "${{ needs.original.outputs.duration }}", "recordDuration": "${{ needs.record.outputs.recordDuration }}", "uploadDuration": "${{ needs.record.outputs.uploadDuration }}"} }'
